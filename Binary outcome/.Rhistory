if (dag == "1"){
if (unmeasured == FALSE){
NA_res <- read.csv(paste0(path, "scenario/differential+measured/Scenario",scenario.id,
"/Results/Equal Rates of Non-Adherence/plots/",
"OR ResultsEqual Rates of Non-Adherence.csv"))
NA_chars <- read.csv(paste0(path, "scenario/differential+measured/Scenario",scenario.id,
"/Results/Equal Rates of Non-Adherence/plots/",
"Sim Char-Equal Rates of Non-Adherence.csv"))
} else {
NA_res <- read.csv(paste0(path, "scenario/differential+measured/Scenario",scenario.id,
"/ResultsU/Equal Rates of Non-Adherence/plots/",
"OR ResultsEqual Rates of Non-Adherence.csv"))
NA_chars <- read.csv(paste0(path, "scenario/differential+measured/Scenario",scenario.id,
"/ResultsU/Equal Rates of Non-Adherence/plots/",
"Sim Char-Equal Rates of Non-Adherence.csv"))
}
}
if (dag == "2"){
if (unmeasured == FALSE){
NA_res <- read.csv(paste0(path, "scenario/differential+measured/Scenario",scenario.id,
"/ResultsA/Equal Rates of Non-Adherence/plots/",
"OR ResultsEqual Rates of Non-Adherence.csv"))
NA_chars <- read.csv(paste0(path, "scenario/differential+measured/Scenario",scenario.id,
"/ResultsA/Equal Rates of Non-Adherence/plots/",
"Sim Char-Equal Rates of Non-Adherence.csv"))
} else {
NA_res <- read.csv(paste0(path, "scenario/differential+measured/Scenario",scenario.id,
"/ResultsUA/Equal Rates of Non-Adherence/plots/",
"OR ResultsEqual Rates of Non-Adherence.csv"))
NA_chars <- read.csv(paste0(path, "scenario/differential+measured/Scenario",scenario.id,
"/ResultsUA/Equal Rates of Non-Adherence/plots/",
"Sim Char-Equal Rates of Non-Adherence.csv"))
}
}
NA_res <- left_join(NA_res, NA_chars, by = c("Desc", "SubDesc"))
unequalRange <- c("01", "21", "41", "61", "81")
UENA <- list()
for (scenario.id in unequalRange){
if (dag == "1"){
if (unmeasured == FALSE){
temp_res <- read.csv(paste0(path, "scenario/differential+measured/Scenario",scenario.id,
"/Results/Unequal Rates of Non-Adherence/plots/",
"OR ResultsUnequal Rates of Non-Adherence.csv"))
temp_chars <- read.csv(paste0(path, "scenario/differential+measured/Scenario",scenario.id,
"/Results/Unequal Rates of Non-Adherence/plots/",
"Sim Char-Unequal Rates of Non-Adherence.csv"))
UENA[[scenario.id]] <- left_join(temp_res, temp_chars, by = c("Desc", "SubDesc"))
} else {
temp_res <- read.csv(paste0(path, "scenario/differential+measured/Scenario",scenario.id,
"/ResultsU/Unequal Rates of Non-Adherence/plots/",
"OR ResultsUnequal Rates of Non-Adherence.csv"))
temp_chars <- read.csv(paste0(path, "scenario/differential+measured/Scenario",scenario.id,
"/ResultsU/Unequal Rates of Non-Adherence/plots/",
"Sim Char-Unequal Rates of Non-Adherence.csv"))
UENA[[scenario.id]] <- left_join(temp_res, temp_chars, by = c("Desc", "SubDesc"))
}
}
if (dag == "2"){
if (unmeasured == FALSE){
temp_res <- read.csv(paste0(path, "scenario/differential+measured/Scenario",scenario.id,
"/ResultsA/Unequal Rates of Non-Adherence/plots/",
"OR ResultsUnequal Rates of Non-Adherence.csv"))
temp_chars <- read.csv(paste0(path, "scenario/differential+measured/Scenario",scenario.id,
"/ResultsA/Unequal Rates of Non-Adherence/plots/",
"Sim Char-Unequal Rates of Non-Adherence.csv"))
UENA[[scenario.id]] <- left_join(temp_res, temp_chars, by = c("Desc", "SubDesc"))
} else {
temp_res <- read.csv(paste0(path, "scenario/differential+measured/Scenario",scenario.id,
"/ResultsUA/Unequal Rates of Non-Adherence/plots/",
"OR ResultsUnequal Rates of Non-Adherence.csv"))
temp_chars <- read.csv(paste0(path, "scenario/differential+measured/Scenario",scenario.id,
"/ResultsUA/Unequal Rates of Non-Adherence/plots/",
"Sim Char-Unequal Rates of Non-Adherence.csv"))
UENA[[scenario.id]] <- left_join(temp_res, temp_chars, by = c("Desc", "SubDesc"))
}
}
}
NA_res <- bind_rows(NA_res, bind_rows(UENA))
NA_bias <- NA_res %>% filter(Estimate %in% c(#"modelITTOR",
"naiveModPPOR", "naiveModPPORB", "u.OR", "s.OR") &
Assessment == "bias" & Property < 5) %>%
mutate(Estimate = recode_factor(Estimate, #`modelITTOR` = "ITT",
`naiveModPPOR` = "Naive PP",
`naiveModPPORB` = "Adj PP", `u.OR` = "IPW PP",
`s.OR` = "sIPW PP"),
`Control Non-Adherence` = meanNonAdherenceArm0,
TreatAdhere = paste(100 * round(meanNonAdherenceArm1, 1), "%"),
TreatAdhere = factor(TreatAdhere, levels = c("0 %", "20 %", "40 %", "60 %", "80 %"))) %>%
ggplot(aes(x = 100 * meanNonAdherenceArm0, y = Property)) +
#geom_point(aes(col = TreatAdhere)) +
geom_point(aes(shape = TreatAdhere, col = TreatAdhere)) + #geom_point(aes(col = TreatAdhere)) +
geom_line(aes(col = TreatAdhere))+
geom_hline(yintercept = 0) +
#geom_errorbar(aes(ymin = Property - PropertySE,
#										ymax = Property + PropertySE)) +
facet_wrap(~Estimate) +
scale_color_viridis_d() +
ggtitle("A") +
labs(x = "Non-Adherence in Control Arm (%)", y = "Bias", col = "Non-Adherence in Treatment Arm (%)") +
theme_bw()
NA_modSE <- NA_res %>% filter(Estimate %in% c(#"modelITTOR",
"naiveModPPOR", "naiveModPPORB", "u.OR", "s.OR") &
Assessment == "modelSE" & Property < 5) %>%
mutate(Estimate = recode_factor(Estimate, #`modelITTOR` = "ITT",
`naiveModPPOR` = "Naive PP",
`naiveModPPORB` = "B Adj. PP", `u.OR` = "IPW PP",
`s.OR` = "sIPW PP"),
`Control Non-Adherence` = meanNonAdherenceArm0,
TreatAdhere = paste(100 * round(meanNonAdherenceArm1, 1), "%"),
TreatAdhere = factor(TreatAdhere, levels = c("0 %", "20 %", "40 %", "60 %", "80 %"))) %>%
ggplot(aes(x = 100 * meanNonAdherenceArm0, y = Property)) +
#geom_point(aes(col = TreatAdhere)) +
geom_point(aes(shape = TreatAdhere, col = TreatAdhere)) + #geom_point(aes(col = TreatAdhere)) +
geom_line(aes(col = TreatAdhere))+
#geom_errorbar(aes(ymin = Property - PropertySE,
#										ymax = Property + PropertySE)) +
facet_wrap(~Estimate) +
ggtitle("B") +
scale_color_viridis_d() +
#labs(x = "Non-Adherence in Control Arm (%)", y = "Average Model SE", col = "Relative Treat. \nNon-Adherence") +
labs(x = "Non-Adherence in Control Arm (%)", y = "Average Model SE", col = "Non-Adherence in Treatment Arm (%)") +
theme_bw()
NA_legend <- gtable_filter(ggplot_gtable(ggplot_build(NA_bias)), "guide-box")
# NA_plot <- grid.arrange(NA_bias + theme(legend.position="none"),
#                         NA_modSE+ theme(legend.position="none"),
#                         NA_legend, widths = c(3.15, 3.15, 1))
NA_plot <- ggarrange(NA_bias,NA_modSE,
ncol=2, nrow=1, common.legend = TRUE, legend="bottom")
pathsave <- "C:/Users/ehsan/OneDrive - The University Of British Columbia/Research/Lucy/Communications in Statistics - Simulation and Computation/figures/"
if (dag == "1"){
if (unmeasured == FALSE){
ggsave(paste0(pathsave, "Non-Adherence Both", "1i.png"),
plot = NA_plot, device = "png", height = 4, width = 8, units = "in", dpi = 300)
} else {
ggsave(paste0(pathsave, "Non-Adherence Both", "U1i.png"),
plot = NA_plot, device = "png", height = 4, width = 8, units = "in", dpi = 300)
}
}
if (dag == "2"){
if (unmeasured == FALSE){
ggsave(paste0(pathsave, "Non-Adherence Both", "2i.png"),
plot = NA_plot, device = "png", height = 4, width = 8, units = "in", dpi = 300)
} else {
ggsave(paste0(pathsave, "Non-Adherence Both", "U2i.png"),
plot = NA_plot, device = "png", height = 4, width = 8, units = "in", dpi = 300)
}
}
}
plot4(unmeasured = FALSE, dag = "1")
plot4(unmeasured = TRUE, dag = "1")
#plot4(unmeasured = FALSE, dag = "2")
#plot4(unmeasured = TRUE, dag = "2")
## Non-Adherence ########################
library(here)
library(ggplot2)
library(dplyr)
library(gridExtra)
library(gtable)
library(stringr)
library(forcats)
require(ggpubr)
plot4 <- function(unmeasured = FALSE, dag = "1"){
path <- paste0("~/GitHub/PragmaticSim/")
mainPath <- paste0(path, "scenario/differential+measured/")
scenario.id = "11"
if (dag == "1"){
if (unmeasured == FALSE){
NA_res <- read.csv(paste0(path, "scenario/differential+measured/Scenario",scenario.id,
"/Results/Equal Rates of Non-Adherence/plots/",
"OR ResultsEqual Rates of Non-Adherence.csv"))
NA_chars <- read.csv(paste0(path, "scenario/differential+measured/Scenario",scenario.id,
"/Results/Equal Rates of Non-Adherence/plots/",
"Sim Char-Equal Rates of Non-Adherence.csv"))
} else {
NA_res <- read.csv(paste0(path, "scenario/differential+measured/Scenario",scenario.id,
"/ResultsU/Equal Rates of Non-Adherence/plots/",
"OR ResultsEqual Rates of Non-Adherence.csv"))
NA_chars <- read.csv(paste0(path, "scenario/differential+measured/Scenario",scenario.id,
"/ResultsU/Equal Rates of Non-Adherence/plots/",
"Sim Char-Equal Rates of Non-Adherence.csv"))
}
}
if (dag == "2"){
if (unmeasured == FALSE){
NA_res <- read.csv(paste0(path, "scenario/differential+measured/Scenario",scenario.id,
"/ResultsA/Equal Rates of Non-Adherence/plots/",
"OR ResultsEqual Rates of Non-Adherence.csv"))
NA_chars <- read.csv(paste0(path, "scenario/differential+measured/Scenario",scenario.id,
"/ResultsA/Equal Rates of Non-Adherence/plots/",
"Sim Char-Equal Rates of Non-Adherence.csv"))
} else {
NA_res <- read.csv(paste0(path, "scenario/differential+measured/Scenario",scenario.id,
"/ResultsUA/Equal Rates of Non-Adherence/plots/",
"OR ResultsEqual Rates of Non-Adherence.csv"))
NA_chars <- read.csv(paste0(path, "scenario/differential+measured/Scenario",scenario.id,
"/ResultsUA/Equal Rates of Non-Adherence/plots/",
"Sim Char-Equal Rates of Non-Adherence.csv"))
}
}
NA_res <- left_join(NA_res, NA_chars, by = c("Desc", "SubDesc"))
unequalRange <- c("01", "21", "41", "61", "81")
UENA <- list()
for (scenario.id in unequalRange){
if (dag == "1"){
if (unmeasured == FALSE){
temp_res <- read.csv(paste0(path, "scenario/differential+measured/Scenario",scenario.id,
"/Results/Unequal Rates of Non-Adherence/plots/",
"OR ResultsUnequal Rates of Non-Adherence.csv"))
temp_chars <- read.csv(paste0(path, "scenario/differential+measured/Scenario",scenario.id,
"/Results/Unequal Rates of Non-Adherence/plots/",
"Sim Char-Unequal Rates of Non-Adherence.csv"))
UENA[[scenario.id]] <- left_join(temp_res, temp_chars, by = c("Desc", "SubDesc"))
} else {
temp_res <- read.csv(paste0(path, "scenario/differential+measured/Scenario",scenario.id,
"/ResultsU/Unequal Rates of Non-Adherence/plots/",
"OR ResultsUnequal Rates of Non-Adherence.csv"))
temp_chars <- read.csv(paste0(path, "scenario/differential+measured/Scenario",scenario.id,
"/ResultsU/Unequal Rates of Non-Adherence/plots/",
"Sim Char-Unequal Rates of Non-Adherence.csv"))
UENA[[scenario.id]] <- left_join(temp_res, temp_chars, by = c("Desc", "SubDesc"))
}
}
if (dag == "2"){
if (unmeasured == FALSE){
temp_res <- read.csv(paste0(path, "scenario/differential+measured/Scenario",scenario.id,
"/ResultsA/Unequal Rates of Non-Adherence/plots/",
"OR ResultsUnequal Rates of Non-Adherence.csv"))
temp_chars <- read.csv(paste0(path, "scenario/differential+measured/Scenario",scenario.id,
"/ResultsA/Unequal Rates of Non-Adherence/plots/",
"Sim Char-Unequal Rates of Non-Adherence.csv"))
UENA[[scenario.id]] <- left_join(temp_res, temp_chars, by = c("Desc", "SubDesc"))
} else {
temp_res <- read.csv(paste0(path, "scenario/differential+measured/Scenario",scenario.id,
"/ResultsUA/Unequal Rates of Non-Adherence/plots/",
"OR ResultsUnequal Rates of Non-Adherence.csv"))
temp_chars <- read.csv(paste0(path, "scenario/differential+measured/Scenario",scenario.id,
"/ResultsUA/Unequal Rates of Non-Adherence/plots/",
"Sim Char-Unequal Rates of Non-Adherence.csv"))
UENA[[scenario.id]] <- left_join(temp_res, temp_chars, by = c("Desc", "SubDesc"))
}
}
}
NA_res <- bind_rows(NA_res, bind_rows(UENA))
NA_bias <- NA_res %>% filter(Estimate %in% c(#"modelITTOR",
"naiveModPPOR", "naiveModPPORB", "u.OR", "s.OR") &
Assessment == "bias" & Property < 5) %>%
mutate(Estimate = recode_factor(Estimate, #`modelITTOR` = "ITT",
`naiveModPPOR` = "Naive PP",
`naiveModPPORB` = "Adj PP", `u.OR` = "IPW PP",
`s.OR` = "sIPW PP"),
`Control Non-Adherence` = meanNonAdherenceArm0,
TreatAdhere = paste(100 * round(meanNonAdherenceArm1, 1), "%"),
TreatAdhere = factor(TreatAdhere, levels = c("0 %", "20 %", "40 %", "60 %", "80 %"))) %>%
ggplot(aes(x = 100 * meanNonAdherenceArm0, y = Property)) +
#geom_point(aes(col = TreatAdhere)) +
geom_point(aes(col = TreatAdhere)) + #geom_point(aes(col = TreatAdhere)) +shape = TreatAdhere,
geom_line(aes(col = TreatAdhere))+
geom_hline(yintercept = 0) +
#geom_errorbar(aes(ymin = Property - PropertySE,
#										ymax = Property + PropertySE)) +
facet_wrap(~Estimate) +
scale_color_viridis_d() +
ggtitle("A") +
labs(x = "Non-Adherence in Control Arm (%)", y = "Bias", col = "Non-Adherence in Treatment Arm (%)") +
theme_bw()
NA_modSE <- NA_res %>% filter(Estimate %in% c(#"modelITTOR",
"naiveModPPOR", "naiveModPPORB", "u.OR", "s.OR") &
Assessment == "modelSE" & Property < 5) %>%
mutate(Estimate = recode_factor(Estimate, #`modelITTOR` = "ITT",
`naiveModPPOR` = "Naive PP",
`naiveModPPORB` = "B Adj. PP", `u.OR` = "IPW PP",
`s.OR` = "sIPW PP"),
`Control Non-Adherence` = meanNonAdherenceArm0,
TreatAdhere = paste(100 * round(meanNonAdherenceArm1, 1), "%"),
TreatAdhere = factor(TreatAdhere, levels = c("0 %", "20 %", "40 %", "60 %", "80 %"))) %>%
ggplot(aes(x = 100 * meanNonAdherenceArm0, y = Property)) +
#geom_point(aes(col = TreatAdhere)) +
geom_point(aes(col = TreatAdhere)) + #geom_point(aes(col = TreatAdhere)) + shape = TreatAdhere,
geom_line(aes(col = TreatAdhere))+
#geom_errorbar(aes(ymin = Property - PropertySE,
#										ymax = Property + PropertySE)) +
facet_wrap(~Estimate) +
ggtitle("B") +
scale_color_viridis_d() +
#labs(x = "Non-Adherence in Control Arm (%)", y = "Average Model SE", col = "Relative Treat. \nNon-Adherence") +
labs(x = "Non-Adherence in Control Arm (%)", y = "Average Model SE", col = "Non-Adherence in Treatment Arm (%)") +
theme_bw()
NA_legend <- gtable_filter(ggplot_gtable(ggplot_build(NA_bias)), "guide-box")
# NA_plot <- grid.arrange(NA_bias + theme(legend.position="none"),
#                         NA_modSE+ theme(legend.position="none"),
#                         NA_legend, widths = c(3.15, 3.15, 1))
NA_plot <- ggarrange(NA_bias,NA_modSE,
ncol=2, nrow=1, common.legend = TRUE, legend="bottom")
pathsave <- "C:/Users/ehsan/OneDrive - The University Of British Columbia/Research/Lucy/Communications in Statistics - Simulation and Computation/figures/"
if (dag == "1"){
if (unmeasured == FALSE){
ggsave(paste0(pathsave, "Non-Adherence Both", "1i.png"),
plot = NA_plot, device = "png", height = 4, width = 8, units = "in", dpi = 300)
} else {
ggsave(paste0(pathsave, "Non-Adherence Both", "U1i.png"),
plot = NA_plot, device = "png", height = 4, width = 8, units = "in", dpi = 300)
}
}
if (dag == "2"){
if (unmeasured == FALSE){
ggsave(paste0(pathsave, "Non-Adherence Both", "2i.png"),
plot = NA_plot, device = "png", height = 4, width = 8, units = "in", dpi = 300)
} else {
ggsave(paste0(pathsave, "Non-Adherence Both", "U2i.png"),
plot = NA_plot, device = "png", height = 4, width = 8, units = "in", dpi = 300)
}
}
}
plot4(unmeasured = FALSE, dag = "1")
plot4(unmeasured = TRUE, dag = "1")
#plot4(unmeasured = FALSE, dag = "2")
#plot4(unmeasured = TRUE, dag = "2")
## Non-Adherence ########################
library(here)
library(ggplot2)
library(dplyr)
library(gridExtra)
library(gtable)
library(stringr)
library(forcats)
require(ggpubr)
path <- "C:/Users/ehsan/Documents/GitHub/PragmaticSim/"
pathsave <- "C:/Users/ehsan/OneDrive - The University Of British Columbia/Research/Lucy/Communications in Statistics - Simulation and Computation/figures/"
ssz <- ""
scenario.code <- "ad"
scenario.no <- "2"
scenario.subno <- "11"
#unmeasured <- TRUE
unmeasured <- FALSE
scenario.id <- paste0(scenario.code, scenario.no, scenario.subno)
paramTable <- read.csv(paste0(path, "scenario/",scenario.id ,".csv"))
if (unmeasured == TRUE) {umg <- "U"} else {umg <- ""}
scenario.no <- c("1","2", "3","4")
UENA <- list()
for (i in scenario.no){
BRisk_res <- read.csv(paste0(path, "scenario/Scenario", scenario.code,"/",ssz,"Results",i,umg,"/", paramTable$Desc[1] ,"/plots/",
"OR Results", paramTable$Desc[1],  ".csv"))
BRisk_chars <- read.csv(paste0(path, "scenario/Scenario", scenario.code,"/",ssz,"Results",i,umg,"/", paramTable$Desc[1] ,"/plots/",
"Sim Char-", paramTable$Desc[1],  ".csv"))
s.n <- as.numeric(as.character(i))
if (s.n == 1) BRisk_chars$scenario.no <- factor("1 (i)")
if (s.n == 2) BRisk_chars$scenario.no <- factor("2 (i)")
if (s.n == 3) BRisk_chars$scenario.no <- factor("3 (i)")
if (s.n == 4) BRisk_chars$scenario.no <- factor("4 (i)")
UENA[[i]] <- left_join(BRisk_res, BRisk_chars, by = c("Desc", "SubDesc"))
}
BRisk_res <- bind_rows(UENA)
BRisk_res$Diagram <- factor(BRisk_res$scenario.no, c("1 (i)", "2 (i)", "3 (i)", "4 (i)"))
# BRisk_res_bias0 <- BRisk_res %>% filter(Estimate %in% c("modelITTOR", "naiveModPPOR") &
#                                           Assessment == "bias") %>%
#   mutate(Estimate = recode_factor(Estimate, `modelITTOR` = "ITT", `naiveModPPOR` = "Naive PP")) %>%
#   ggplot(aes(x = theta2, y = Property)) +
#   scale_x_continuous(breaks=c(-1,0,1)) +
#   geom_point(aes(shape = Diagram)) + geom_point(aes(col = Diagram)) +
#   geom_line(aes(col = Diagram)) + # linetype = Diagram,  # position=position_dodge(width=0.3),
#   geom_hline(yintercept = 0) +
#   # geom_errorbar(aes(ymin = Property - PropertySE,
#   #                   ymax = Property + PropertySE)) +
#   facet_wrap(~Estimate) +
#   # scale_color_viridis_d() +
#   labs(x = "Log(OR)", y = "Bias") +
#   ggtitle("A) Naive estimates") +
#   ylim(-1, 2) +
#   theme_bw()
BRisk_res_bias <- BRisk_res %>% filter(Estimate %in% c("naiveModPPORB", "s.OR", "u.OR",
"ts.OR") &
Assessment == "bias") %>%
mutate(Estimate = recode_factor(Estimate, `naiveModPPORB` = "B Adj. PP",
`ts.OR` = "B+L Adj. PP",
`u.OR` = "IPW PP", `s.OR` = "sIPW PP"),
`Control Non-Adherence` = meanNonAdherenceArm0,
TreatAdhere = paste(100 * round(meanNonAdherenceArm1, 1), "%"),
TreatAdhere = factor(TreatAdhere, levels = c("0 %", "20 %", "40 %", "60 %", "80 %"))) %>%
ggplot(aes(x = 100 * meanNonAdherenceArm0, y = Property)) +
#geom_point(aes(col = Diagram)) +
geom_point(aes(shape = Diagram)) + geom_point(aes(col = Diagram)) +
geom_line(position=position_dodge(width=0.3), aes(col = Diagram)) +
geom_hline(yintercept = 0) +
#geom_errorbar(aes(ymin = Property - PropertySE,
#										ymax = Property + PropertySE)) +
facet_wrap(~Estimate) +
#scale_color_viridis_d() +
ylim(-0.1, 2.1) +
ggtitle("A") +
labs(x = "Non-Adherence (%)", y = "Bias", col = "Diagram") +
theme_bw()
BRisk_res_SE <- BRisk_res %>% filter(Estimate %in% c("naiveModPPORB", "s.OR", "u.OR",
"ts.OR") &
Assessment == "modelSE") %>%
mutate(Estimate = recode_factor(Estimate, `naiveModPPORB` = "B Adj. PP",
`ts.OR` = "B+L Adj. PP",
`u.OR` = "IPW PP", `s.OR` = "sIPW PP"),
`Control Non-Adherence` = meanNonAdherenceArm0,
TreatAdhere = paste(100 * round(meanNonAdherenceArm1, 1), "%"),
TreatAdhere = factor(TreatAdhere, levels = c("0 %", "20 %", "40 %", "60 %", "80 %"))) %>%
ggplot(aes(x = 100 * meanNonAdherenceArm0, y = Property)) +
#geom_point(aes(col = Diagram)) +
geom_point(aes(shape = Diagram)) + geom_point(aes(col = Diagram)) +
geom_line(position=position_dodge(width=0.3), aes(col = Diagram)) +
geom_hline(yintercept = 0) +
#geom_errorbar(aes(ymin = Property - PropertySE,
#										ymax = Property + PropertySE)) +
facet_wrap(~Estimate) +
#scale_color_viridis_d() +
ylim(-0.1, 2.1) +
ggtitle("B") +
labs(x = "Non-Adherence (%)", y = "Model Standard Error", col = "Diagram") +
theme_bw()
BRisk_res_plotb <- ggarrange(BRisk_res_bias,BRisk_res_SE,
ncol=2, nrow=1, common.legend = TRUE, legend="bottom")
BRisk_res_plotb
expo <- 1
ggsave(paste0(pathsave, scenario.code, ssz, "b.png"),
plot = BRisk_res_plotb, device = "png", height = 3.8*expo, width = 7*expo, units = "in", dpi = 300)
rm(list=ls(all=TRUE))
library(plyr)
library(stringr)
library(mgcv)
setwd("~/GitHub/PlasmodeSimBinary/Binary outcome")
# Data DOwnload
# rhc <- read.csv("https://biostat.app.vumc.org/wiki/pub/Main/DataSets/rhc.csv")
rhc <- read.csv("rhc.csv")
# Data prepare
id = "id"
exposure <- "swang1"
treatLabel <- "" # RHC
outcome <- "death"
vars = c("age", "sex", "race", "edu", "income", "ninsclas", "cat1", "das2d3pc", "dnr1",
"ca", "surv2md1", "aps1", "scoma1", "wtkilo1", "temp1", "meanbp1", "resp1", "hrt1", "pafi1",
"paco21", "ph1", "wblc1", "hema1", "sod1", "pot1", "crea1", "bili1", "alb1", "resp", "card",
"neuro", "gastr", "renal", "meta", "hema", "seps", "trauma", "ortho", "cardiohx", "chfhx",
"dementhx", "psychhx", "chrpulhx", "renalhx", "liverhx", "gibledhx", "malighx", "immunhx",
"transhx", "amihx")
rhc2 <- rhc[,c(outcome,exposure,vars)]
rhc2$swang1 <- ifelse(rhc2$swang1 == "RHC", 1, 0)
rhc2$death <- ifelse(rhc2$death == "Yes", 1, 0)
names(rhc2) <- c(outcome,exposure,vars)
rhc2$id <- 1:nrow(rhc2)
rhcX <- as.data.frame(na.omit(rhc2))
#dim(rhc2)[1]-dim(rhcX)[1]
# Initial estimate
RHScov = paste0(vars, collapse = "+")
Oformula = as.formula(paste0(outcome, "~", RHScov))
Oformula.adj = as.formula(paste0(outcome, "~", exposure, "+", RHScov))
glm.adj0<- glm(Oformula.adj,family=binomial(link="logit"),data= rhcX)
estOR <- exp(summary(glm.adj0)$coef["swang1","Estimate"])
Yr <- round(table(rhcX$death)[2]/length(rhcX$death),2)
Er <- round(table(rhcX$swang1)[2]/length(rhcX$swang1),2)
cat("Original data", "has event rate =", Yr,
"exposure prevalence =", Er,
"OR =", estOR,"\n")
rhc <- rhcX
#save(rhc, exposure, outcome, vars, RHScov, Oformula, Yr, Er, file = "rhcX.RData")
effect.mod <- "sex"
vars <- vars[!(vars %in% effect.mod)]
RHScov = paste0(vars, collapse = "+")
Oformula.int = as.formula(paste0(outcome, "~", exposure, "+", RHScov, "+", effect.mod, "*", exposure))
glm.int<- glm(Oformula.int,family=binomial(link="logit"),data= rhc)
publish(glm.int)
rm(list=ls(all=TRUE))
library(plyr)
library(Publish)
library(stringr)
library(mgcv)
setwd("~/GitHub/PlasmodeSimBinary/Binary outcome")
# Data DOwnload
# rhc <- read.csv("https://biostat.app.vumc.org/wiki/pub/Main/DataSets/rhc.csv")
rhc <- read.csv("rhc.csv")
# Data prepare
id = "id"
exposure <- "swang1"
treatLabel <- "" # RHC
outcome <- "death"
vars = c("age", "sex", "race", "edu", "income", "ninsclas", "cat1", "das2d3pc", "dnr1",
"ca", "surv2md1", "aps1", "scoma1", "wtkilo1", "temp1", "meanbp1", "resp1", "hrt1", "pafi1",
"paco21", "ph1", "wblc1", "hema1", "sod1", "pot1", "crea1", "bili1", "alb1", "resp", "card",
"neuro", "gastr", "renal", "meta", "hema", "seps", "trauma", "ortho", "cardiohx", "chfhx",
"dementhx", "psychhx", "chrpulhx", "renalhx", "liverhx", "gibledhx", "malighx", "immunhx",
"transhx", "amihx")
rhc2 <- rhc[,c(outcome,exposure,vars)]
rhc2$swang1 <- ifelse(rhc2$swang1 == "RHC", 1, 0)
rhc2$death <- ifelse(rhc2$death == "Yes", 1, 0)
names(rhc2) <- c(outcome,exposure,vars)
rhc2$id <- 1:nrow(rhc2)
rhcX <- as.data.frame(na.omit(rhc2))
#dim(rhc2)[1]-dim(rhcX)[1]
# Initial estimate
RHScov = paste0(vars, collapse = "+")
Oformula = as.formula(paste0(outcome, "~", RHScov))
Oformula.adj = as.formula(paste0(outcome, "~", exposure, "+", RHScov))
glm.adj0<- glm(Oformula.adj,family=binomial(link="logit"),data= rhcX)
estOR <- exp(summary(glm.adj0)$coef["swang1","Estimate"])
Yr <- round(table(rhcX$death)[2]/length(rhcX$death),2)
Er <- round(table(rhcX$swang1)[2]/length(rhcX$swang1),2)
cat("Original data", "has event rate =", Yr,
"exposure prevalence =", Er,
"OR =", estOR,"\n")
rhc <- rhcX
#save(rhc, exposure, outcome, vars, RHScov, Oformula, Yr, Er, file = "rhcX.RData")
effect.mod <- "sex"
vars <- vars[!(vars %in% effect.mod)]
RHScov = paste0(vars, collapse = "+")
Oformula.int = as.formula(paste0(outcome, "~", exposure, "+", RHScov, "+", effect.mod, "*", exposure))
glm.int<- glm(Oformula.int,family=binomial(link="logit"),data= rhc)
publish(glm.int)
summary(glm.int)
publish(glm.int)
